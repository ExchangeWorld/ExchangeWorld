/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 0.12.1 - 2015-02-20
 * License: MIT
 */
angular.module("ui.bootstrap",["ui.bootstrap.dropdown"]),angular.module("ui.bootstrap.dropdown",[]).constant("dropdownConfig",{openClass:"open"}).service("dropdownService",["$document",function(n){var o=null;this.open=function(i){o||(n.bind("click",e),n.bind("keydown",t)),o&&o!==i&&(o.isOpen=!1),o=i},this.close=function(i){o===i&&(o=null,n.unbind("click",e),n.unbind("keydown",t))};var e=function(n){if(o){var e=o.getToggleElement();n&&e&&e[0].contains(n.target)||o.$apply(function(){o.isOpen=!1})}},t=function(n){27===n.which&&(o.focusToggleElement(),e())}}]).controller("DropdownController",["$scope","$attrs","$parse","dropdownConfig","dropdownService","$animate",function(n,o,e,t,i,l){var r,c=this,s=n.$new(),a=t.openClass,u=angular.noop,d=o.onToggle?e(o.onToggle):angular.noop;this.init=function(t){c.$element=t,o.isOpen&&(r=e(o.isOpen),u=r.assign,n.$watch(r,function(n){s.isOpen=!!n}))},this.toggle=function(n){return s.isOpen=arguments.length?!!n:!s.isOpen},this.isOpen=function(){return s.isOpen},s.getToggleElement=function(){return c.toggleElement},s.focusToggleElement=function(){c.toggleElement&&c.toggleElement[0].focus()},s.$watch("isOpen",function(o,e){l[o?"addClass":"removeClass"](c.$element,a),o?(s.focusToggleElement(),i.open(s)):i.close(s),u(n,o),angular.isDefined(o)&&o!==e&&d(n,{open:!!o})}),n.$on("$locationChangeSuccess",function(){s.isOpen=!1}),n.$on("$destroy",function(){s.$destroy()})}]).directive("dropdown",function(){return{controller:"DropdownController",link:function(n,o,e,t){t.init(o)}}}).directive("dropdownToggle",function(){return{require:"?^dropdown",link:function(n,o,e,t){if(t){t.toggleElement=o;var i=function(i){i.preventDefault(),o.hasClass("disabled")||e.disabled||n.$apply(function(){t.toggle()})};o.bind("click",i),o.attr({"aria-haspopup":!0,"aria-expanded":!1}),n.$watch(t.isOpen,function(n){o.attr("aria-expanded",!!n)}),n.$on("$destroy",function(){o.unbind("click",i)})}}}});